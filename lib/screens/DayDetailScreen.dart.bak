import 'package:beefit/constants/AppMethods.dart';
import 'package:drag_and_drop_lists/drag_and_drop_lists.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:google_fonts/google_fonts.dart';
import '../constants/AppStyles.dart';
import '../tests/data.dart';
import '../tests/model.dart';

class DayDetailScreen extends StatefulWidget {
  final int _day;

  const DayDetailScreen({required int day, Key? key})
      : _day = day,
        super(key: key);

  @override
  _DayDetailScreenState createState() => _DayDetailScreenState();
}

class _DayDetailScreenState extends State<DayDetailScreen> {
  late List<DragAndDropList> lists;

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    lists = allLists.map(buildList).toList();
  }
  @override
  Widget build(BuildContext context) {
    final _scaleFont = AppMethods.fontScale(context);
    final _scaleScreen = AppMethods.screenScale(context);
    double screenHeight = MediaQuery.of(context).size.height;
    final _kAppBarSize = screenHeight * 0.2;
    int day = widget._day;
    return Scaffold(
      body: CustomScrollView(
        slivers: [
          SliverAppBar(
            expandedHeight: _kAppBarSize,
            pinned: true,
            elevation: 0.0,
            backgroundColor: AppStyle.primaryColor,
            flexibleSpace: Container(
              padding: EdgeInsets.symmetric(horizontal: 30 * _scaleScreen, vertical: 15 * _scaleScreen),
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: [
                    Color(0xffE9A24A),
                    Color(0xffF2BE6A),
                    Color(0xffF6D08B)
                  ],
                  end: Alignment.bottomRight,
                  begin: Alignment.topLeft,
                ),
                image: DecorationImage(
                  image: AssetImage("assets/imgs/appbarBackground.png"),
                  fit: BoxFit.fill,
                ),
              ),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.end,
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'Massive upper body',
                    style: GoogleFonts.poppins(
                        color: Colors.white,
                        fontWeight: FontWeight.w900,
                        fontSize: 24 * _scaleFont,),
                  ),
                  Text(
                    'Day ${day.toString()}'.toUpperCase(),
                    style: GoogleFonts.poppins(
                      fontSize: 30 * _scaleFont,
                      fontWeight: FontWeight.w900,
                      color: Colors.white,
                    ),
                  ),
                ],
              ),
            ),
          ),
          SliverList(
            delegate: SliverChildListDelegate(
              [
                Padding(
                  padding: EdgeInsets.symmetric(horizontal: 30 * _scaleScreen, vertical: 20 * _scaleScreen),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Row(
                        children: [
                          Expanded(
                            child: Column(
                              children: [
                                Text(
                                  '17 minutes',
                                  style: GoogleFonts.poppins(
                                      fontWeight: FontWeight.bold,
                                      fontSize: 16 * _scaleFont,),
                                ),
                                Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    FaIcon(
                                      FontAwesomeIcons.clock,
                                      color: Colors.grey,
                                      size: 14 * _scaleFont,
                                    ),
                                    SizedBox(
                                      width: 4 * _scaleScreen,
                                    ),
                                    Text(
                                      'Time',
                                      style: GoogleFonts.poppins(
                                          fontWeight: FontWeight.w500,
                                          fontSize: 13 * _scaleFont,
                                          color: Colors.grey),
                                    )
                                  ],
                                ),
                              ],
                            ),
                          ),
                          Container(
                            width: 2,
                            color: Colors.black,
                          ),
                          Expanded(
                            child: Container(
                              decoration: const BoxDecoration(
                                border: Border(
                                  left: BorderSide(
                                      color: Colors.black, width: 0.5),
                                ),
                              ),
                              child: Column(
                                children: [
                                  Text(
                                    '100 kCal',
                                    style: GoogleFonts.poppins(
                                        fontWeight: FontWeight.bold,
                                        fontSize: 16 * _scaleFont),
                                  ),
                                  Text(
                                    'Burned',
                                    style: GoogleFonts.poppins(
                                        fontWeight: FontWeight.w500,
                                        fontSize: 13 * _scaleScreen,
                                        color: Colors.grey),
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ],
                      ),
                      Padding(
                        padding: EdgeInsets.symmetric(vertical: 16 * _scaleScreen),
                        child: Text(
                          'Exercises (10)',
                          style: GoogleFonts.poppins(fontSize: 16 * _scaleFont),
                        ),
                      ),
                      SizedBox(
                        height: 300,
                        child: DragAndDropLists(
                          // lastItemTargetHeight: 50,
                          // addLastItemTargetHeightToTop: true,
                          // lastListTargetSize: 30,

                          // listPadding: EdgeInsets.all(16 * _scaleScreen),
                          listInnerDecoration: BoxDecoration(
                            color: Theme.of(context).canvasColor,
                            borderRadius: BorderRadius.circular(10),
                          ),
                          children: lists,
                          itemDivider: const Divider(thickness: 1, height: 2, color: AppStyle.gray5Color),
                          itemDecorationWhileDragging: const BoxDecoration(
                            color: AppStyle.whiteColor,
                            boxShadow: [BoxShadow(color: Colors.black12, blurRadius: 4)],
                          ),
                          listDragHandle: buildDragHandle(isList: true),
                          itemDragHandle: buildDragHandle(),
                          onItemReorder: onReorderListItem,
                          onListReorder: onReorderList,
                        ),
                      ),
                    ],
                  ),
                )
              ],
            ),
          ),
        ],
      ),
    );
  }

  DragHandle buildDragHandle({bool isList = false}) {
    final verticalAlignment = isList
        ? DragHandleVerticalAlignment.top
        : DragHandleVerticalAlignment.center;
    final color = isList ? Colors.blueGrey : Colors.black26;

    return DragHandle(
      verticalAlignment: verticalAlignment,
      child: Container(
        padding: const EdgeInsets.only(right: 10),
        child: Icon(Icons.menu, color: color),
      ),
    );
  }

  DragAndDropList buildList(DraggableList list) => DragAndDropList(
    header: Container(
      padding: const EdgeInsets.all(8),
      child: Text(
        list.header,
        style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
      ),
    ),
    children: list.items
        .map((item) => DragAndDropItem(
      child: ListTile(
        leading: Image.network(
          item.urlImage,
          width: 40,
          height: 40,
          fit: BoxFit.cover,
        ),
        title: Text(item.title),
      ),
    ))
        .toList(),
  );

  void onReorderListItem(
      int oldItemIndex,
      int oldListIndex,
      int newItemIndex,
      int newListIndex,
      ) {
    setState(() {
      final oldListItems = lists[oldListIndex].children;
      final newListItems = lists[newListIndex].children;

      final movedItem = oldListItems.removeAt(oldItemIndex);
      newListItems.insert(newItemIndex, movedItem);
    });
  }

  void onReorderList(
      int oldListIndex,
      int newListIndex,
      ) {
    setState(() {
      final movedList = lists.removeAt(oldListIndex);
      lists.insert(newListIndex, movedList);
    });
  }
}
